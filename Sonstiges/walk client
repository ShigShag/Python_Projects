            # If you want to browse files for one client
            r"""elif cmd == "walk" and len(self.selection) == 1:
                i = self.selection[0] - 1
                print(f"TRYING TO WALK CLIENT: {socket.gethostbyaddr(self.clients[i][1][0])[0]}\t{self.clients[i][1][0]}:{self.clients[i][1][1]}")

                # client object
                client = self.clients[(self.selection[0] - 1)][0]

                # passed variable to check if a send failed
                passed = False

                # Message to inform client to activate Walk mode
                walk_notification = "WALK"

                # Send walk notification
                passed = self.send(client, walk_notification)

                # If message was send successful
                if passed:
                    msg = self.receive(client)

                    # If message receive was successful
                    if msg:
                        # Variable to simulate current working directory
                        path = str(msg) + ">"

                        # few print statements
                        print("\n")
                        print(f"NOW WALKING CLIENT: {socket.gethostbyaddr(self.clients[i][1][0])[0]}\t{self.clients[i][1][0]}:{self.clients[i][1][1]}")
                        print("TYPE STOP TO EXIT WALKING")

                        # Enter main loop
                        while True:
                            cmd = input(path)

                            # Send message and create
                            # Another variable to check if function succeeded
                            success = self.send(client, cmd)

                            # If send was successful
                            if success:
                                # Sleep for one to prevent loss of packages
                                sleep(1)

                                # Receive answer
                                success = self.receive(client)

                                if success:
                                    pass


                            # If message send failed set passed to false and break
                            else:
                                passed = False
                                break

                    # If message was not received
                    else:
                        passed = False

                # If message send or receive failed check clients again
                if not passed:
                    print("WALKING FAILED")
                    self.check_client()"""
